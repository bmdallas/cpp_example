# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This job will ensure that the code builds and links and passes tests correctly
  build:
    # Instead of using latest, which could change in the future, be specific here.
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install conan
        run: |
            pip3 install setuptools
            pip3 install conan
            pip3 install cmake-format
      - name: Install llvm tools, doxygen, and updated gcc
        run: |
            sudo add-apt-repository ppa:ubuntu-toolchain-r/test
            sudo apt update
            sudo apt install gcc-10 g++-10 clang-format-10 clang-tidy-10 doxygen dot2tex
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 7
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 7
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
      - name: Build Example
        run: |
          export PATH=/usr/lib/llvm-10/bin:$PATH
          mkdir build
          cd build
          conan install ..
          conan build ..
      - name:  Test Example
        run: |
            cd build
            make test
      - name: Test Formatting
        run: |
            git config --local clangformat.style Google
            cd build
            make format
            make check-format
      - name: Generate Documentation
        run: |
            cd build
            make doc
